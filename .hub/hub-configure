#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

bubbles="https://api.app.vou9.dev.superhub.io/dns"
asi_domain="dev.superhub.io"

usage() {
cat << EOF

Generates initial configuration for Agile Stacks platform or switches to \
the existing platform

Usage: $(basename "$0") [-p PLATFORM_NAME]
Parameters:
    -p --platform      Name of Kubernetes context in Kubeconfig file or name of \
existing Agile Stacks platform (mandatory)
    -d --delete        Deletes given platform configuration

EOF
}

while [ "$1" != "" ]; do
    case "$1" in
        -p | --platform )   shift
                            platform="$1"
                            ;;
        -d | --delete )     delete=1
                            ;;
        -h | --help )       usage
                            exit
                            ;;
        * )                 usage
                            exit 1
    esac
    shift
done

platform() {
  platform="$1"
  while IFS= read -r line
  do
    found="$(echo "$line" | grep "$platform")"
    if test -n "$found"; then
      echo "$found" | cut -d, -f2
      exit
    fi
  done < "$mappingfile"
}

default=".env"

envdir="$(pwd)/.hub/env"
mappingfile="$envdir/platforms"

mkdir -p "$envdir"
touch "$mappingfile"

if test -z "$platform"; then
  usage
  exit 1
fi

maybe_domain_name="$(platform "$platform")"

if test -n "$maybe_domain_name"; then

  domain_name="$maybe_domain_name"
  if test -n "$delete"; then

    current=$(readlink .env)
    if test "$(grep -s "$domain_name" "$current")"; then
      rm -f .env
    fi

    sed -i.bak "/$domain_name/d" "$mappingfile"
    rm -f "$envdir/$domain_name.env"
    rm -f "$envdir/kubeconfig.$domain_name.yaml"

    echo
    echo "Configuration for Agile Stacks platform $domain_name removed"
    echo
    exit
  fi

  echo
  echo "AgileStacks platform name: ${bold}$domain_name"
  echo
else

    kubectl config use-context "$platform" &> /dev/null

    retVal=$?
    if [ "$retVal" -ne 0 ]; then
      echo
      echo "Context with name ${bold}$platform ${normal}is not found in your Kubeconfig \
nor AgileStacks platform configuration with such name has been found. Stop"
      echo
      exit 1
    fi

    meta="$(curl -s -X POST \
        $bubbles \
        -H 'Content-Type: application/json;charset=UTF-8' \
        -d "{\"baseDomain\": \"$asi_domain\"}")"
    domain_name="$(echo "$meta" | jq -r .domain)"

    kubectl config view --minify --flatten \
      | sed "s/  name: $platform/  name: $domain_name/" \
      | sed "s/current-context: $platform/current-context: $domain_name/" \
      > "$envdir/kubeconfig.$domain_name.yaml"

    if test -z "$AWS_PROFILE"; then
      export AWS_PROFILE=default
    fi

    if test -z "$AWS_REGION"; then
      export AWS_REGION=us-east-1
    fi

    echo "$platform,$domain_name" >> "$mappingfile"
    cat <<EOF > "$envdir/$domain_name.env"
#!/bin/bash

# AWS Profile and AWS region where  (editable)
export AWS_PROFILE="$AWS_PROFILE"
export AWS_REGION="$AWS_REGION"

# Name of Kubernetes Platform (generated by Agile Stacks)
export PLATFORM_NAME="$(echo "$domain_name" | cut -d. -f1)"

# Parent domain of the platform (provided by Agile Stacks)
export BASE_DOMAIN="$asi_domain"
export DOMAIN_KEY="$(echo "$meta" | jq -r .key)"

# Name and region of S3 bucket where state of provsisioned components will be stored
export STATE_BUCKET="agilestacks.$domain_name"
export STATE_REGION="$AWS_REGION"

export KUBECONFIG="$envdir/kubeconfig.$domain_name.yaml"

EOF

  echo
  echo "Initial configuration for Kubernetes cluster ${bold}$platform ${normal}has been created"
  echo
  echo "${bold}Agile Stacks platform name:   ${normal}$domain_name"
fi

envfile="$envdir/$domain_name.env"

echo "${bold}Configuration file location:  ${normal}$envfile"
echo "Please review configuration file of the platform and change settings such as AWS profile or Region if necessary!"
echo
echo "To apply environment for ${bold}$domain_name ${normal}run the following:"
echo "${bold}source $default"
echo

ln -sf "$envfile" "$default"
